html, body {
  padding: 0;
  margin: 0;
}

a {
  color: #fff;
  text-decoration: none;
}

#wrapper {
  margin: 0 auto;
  width: 900px;
  height: 600px;

  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: column;
  flex-direction: column;
  position: relative;
}

#tracker {
  height: 200px;
  position: relative;
}

#modules-panel {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: row;
  flex-direction: row;
  position: relative;
}

#module-properties {
  width: 200px;
}

#midiNotification {
  position: absolute;
  top: 0px;
  right: 5px;
  z-index: 9;
}


body {
  background: #000;
}
#wrapper {
  background: #333;
  color: #eee;
}
#tracker {
  background: #111;
}
#module-properties {
  background: #333;
}
#node-editor {
  background: #666;
}

#module-properties {
  ul {
    padding: 0;
    margin: 0;
  }
  li {
    list-style: none;
    padding: 5px 10px;
    margin: 0;
    position: relative;
    input[type=range] {
      width: 100%;
    }
    .title {
      float: left;
      color: #aaa;
    }
    .valueText {
      float: right;
      font-family: monospace;
    }
  }
}

#midiNotification {
  .notification-icon {
    font-family: monospace;
    font-size: 8px;
  }
  .assign {
    display: none;
    color: #fff;
    vertical-align: top;
    line-height: 24px;
    margin-right: 5px;
  }
  
  .notification {
    &[data-state=noinputs] {
      .notification-icon {
        color: #000;
      }
    }  
    &[data-state=success] {
      .notification-icon {
        color: #0F0;
      }
      .assign {
        display: inline-block;
      }
    }
    &[data-state=loading] {
      .notification-icon {
        color: #FFF;
      }
    }
    &[data-state=error] {
      .notification-icon {
        color: #F00;
      }
    }
  }
}

// Assign mode
body:not(.assign-mode) {
  .visible-if-assign-mode {
    display: none;
  }
  [data-assignable] {
    border: 1px solid transparent;
  }
}
body.assign-mode {
  .visible-if-not-assign-mode {
    display: none;
  }
  [data-assignable=""] {
    &:after {
      display: none;
    }
  }
  [data-assignable] {
    border: 1px dashed #0f0;
    background: rgba(0,255,0,0.1);
    position: relative;
    &:after {
      content: attr(data-assignable);
      font-size: 10px;
      font-family: monospace;
      background: #0f0;
      color: #000;
      padding: 2px 5px;
      position: absolute;
      bottom: 0px;
      left: 0px;
    }
  }
  [data-assignable=waiting] {
    border: 1px dashed #00f;
    background: rgba(0,0,255,0.1);
    &:after {
      background: #00f;
      color: #fff;
    }
  }
}
